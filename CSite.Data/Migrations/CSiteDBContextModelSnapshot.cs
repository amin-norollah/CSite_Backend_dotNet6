// <auto-generated />
using System;
using CSite.Data.DdContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSite.Data.Migrations
{
    [DbContext(typeof(CSiteDBContext))]
    partial class CSiteDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CSite.Data.Entities.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Empty",
                            Image = "",
                            ModifiedDate = new DateTime(2022, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "new car 1",
                            Price = 100f,
                            UserId = "Empty"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2020, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Empty",
                            Image = "",
                            ModifiedDate = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "new car 1",
                            Price = 100f,
                            UserId = "Empty"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2022, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Empty",
                            Image = "",
                            ModifiedDate = new DateTime(2022, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "new car 1",
                            Price = 100f,
                            UserId = "Empty"
                        });
                });

            modelBuilder.Entity("CSite.Data.Entities.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CarsId")
                        .HasColumnType("int");

                    b.Property<long?>("Exported")
                        .HasColumnType("bigint");

                    b.Property<long?>("Imported")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarsId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 300,
                            CarsId = 20,
                            Exported = 100L,
                            Imported = 120L,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 301,
                            CarsId = 21,
                            Exported = 230L,
                            Imported = 280L,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 302,
                            CarsId = 22,
                            Exported = 5L,
                            Imported = 85L,
                            Quantity = 80
                        });
                });

            modelBuilder.Entity("CSite.Data.Entities.Receipts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("ClientUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SupplierUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("CSite.Data.Entities.Products", b =>
                {
                    b.HasOne("CSite.Data.Entities.Cars", "Cars")
                        .WithMany("Products")
                        .HasForeignKey("CarsId");

                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CSite.Data.Entities.Receipts", b =>
                {
                    b.HasOne("CSite.Data.Entities.Cars", "Car")
                        .WithMany("Receipts")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CSite.Data.Entities.Cars", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Receipts");
                });
#pragma warning restore 612, 618
        }
    }
}
